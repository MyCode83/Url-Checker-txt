import httpx, sys, json
from colorama import Fore, init
from fake_useragent import UserAgent
ua = UserAgent()
init()
_headers=None
if len(sys.argv) > 1:
    try:
        datos=sys.argv[1]
        
        with open(datos, "r") as f:
            _headers=json.load(f)

    except FileNotFoundError:
        print(Fore.RED+"Error comprueba la ruta del archivo json, cabeceras por defecto")
        _headers = None
    except json.JSONDecodeError:
        print(Fore.RED+"El json tiene un error, usando cabeceras por defecto.")
        _headers = None


if not _headers:
    _headers = {
            "User-Agent": ua.random,
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
            "Accept-Language": "es-ES,es;q=0.9,en;q=0.8",
            "Accept-Encoding": "gzip, deflate, br",
            "Connection": "keep-alive",
            "Upgrade-Insecure-Requests": "1",
            "Sec-Fetch-Dest": "document",
            "Sec-Fetch-Mode": "navigate",
            "Sec-Fetch-Site": "none",
            "Sec-Fetch-User": "?1",
            "Cache-Control": "max-age=0"
        }

while True:
    URL = input("Que url desea ver si esta activo: ").lower()
    try:
        http = httpx.get(url=f"https://{URL}", follow_redirects=True, headers=_headers)
    except httpx.ConnectError as hc:
        print(Fore.RED+f"Error en la conexion: {hc}")
    activos = {
    200: "200 OK â€“ Solicitud exitosa.",
    201: "201 Created â€“ Recurso creado correctamente.",
    202: "202 Accepted â€“ Solicitud aceptada, aÃºn no procesada.",
    203: "203 Non-Authoritative Information â€“ InformaciÃ³n modificada por intermediario.",
    204: "204 No Content â€“ Solicitud exitosa sin contenido.",
    205: "205 Reset Content â€“ Solicitud exitosa, reiniciar la vista.",
    206: "206 Partial Content â€“ Se enviÃ³ solo parte del recurso (ej. descarga parcial)."
}


    error = {
    300: "300 Multiple Choices â€“ MÃºltiples opciones posibles.",
    301: "301 Moved Permanently â€“ RedirecciÃ³n permanente.",
    302: "302 Found â€“ RedirecciÃ³n temporal (antes: Moved Temporarily).",
    303: "303 See Other â€“ Consultar otro recurso mediante GET.",
    304: "304 Not Modified â€“ No ha cambiado desde la Ãºltima solicitud.",
    305: "305 Use Proxy â€“ Debe accederse mediante proxy (obsoleto).",
    306: "306 (Unused) â€“ CÃ³digo reservado, ya no se usa.",
    307: "307 Temporary Redirect â€“ RedirecciÃ³n temporal (mismo mÃ©todo).",
    308: "308 Permanent Redirect â€“ RedirecciÃ³n permanente (mismo mÃ©todo).",
    400: "400 Bad Request â€“ Solicitud malformada.",
    401: "401 Unauthorized â€“ No autenticado.",
    402: "402 Payment Required â€“ Se requiere pago (reservado).",
    403: "403 Forbidden â€“ Acceso denegado.",
    404: "404 Not Found â€“ Recurso no encontrado.",
    405: "405 Method Not Allowed â€“ MÃ©todo no permitido.",
    406: "406 Not Acceptable â€“ No cumple con requisitos de respuesta.",
    407: "407 Proxy Authentication Required â€“ AutenticaciÃ³n del proxy requerida.",
    408: "408 Request Timeout â€“ Tiempo de espera agotado.",
    409: "409 Conflict â€“ Conflicto con el estado actual del recurso.",
    410: "410 Gone â€“ Recurso eliminado permanentemente.",
    411: "411 Length Required â€“ Falta el encabezado 'Content-Length'.",
    412: "412 Precondition Failed â€“ Fallaron las precondiciones.",
    413: "413 Payload Too Large â€“ Cuerpo de solicitud demasiado grande.",
    414: "414 URI Too Long â€“ URL demasiado larga.",
    415: "415 Unsupported Media Type â€“ Tipo de archivo no soportado.",
    416: "416 Range Not Satisfiable â€“ Rango solicitado no vÃ¡lido.",
    417: "417 Expectation Failed â€“ FallÃ³ la expectativa definida.",
    418: "418 I'm a teapot â€“ (Broma del protocolo HTCY) ðŸ«–",
    421: "421 Misdirected Request â€“ Solicitud dirigida al servidor incorrecto.",
    422: "422 Unprocessable Entity â€“ Error de validaciÃ³n en contenido.",
    423: "423 Locked â€“ Recurso bloqueado.",
    424: "424 Failed Dependency â€“ Dependencia fallÃ³.",
    425: "425 Too Early â€“ Solicitud enviada demasiado pronto.",
    426: "426 Upgrade Required â€“ Requiere actualizar el protocolo.",
    428: "428 Precondition Required â€“ Se requieren precondiciones.",
    429: "429 Too Many Requests â€“ Demasiadas solicitudes (rate limit).",
    431: "431 Request Header Fields Too Large â€“ Encabezados demasiado grandes.",
    451: "451 Unavailable For Legal Reasons â€“ Bloqueado por motivos legales.",
    500: "500 Internal Server Error â€“ Error interno del servidor.",
    501: "501 Not Implemented â€“ FunciÃ³n no soportada.",
    502: "502 Bad Gateway â€“ ComunicaciÃ³n entre servidores fallÃ³.",
    503: "503 Service Unavailable â€“ Servidor temporalmente no disponible.",
    504: "504 Gateway Timeout â€“ Tiempo de espera agotado en el servidor.",
    505: "505 HTTP Version Not Supported â€“ VersiÃ³n HTTP no soportada.",
    506: "506 Variant Also Negotiates â€“ Error de negociaciÃ³n de contenido.",
    507: "507 Insufficient Storage â€“ Almacenamiento insuficiente.",
    508: "508 Loop Detected â€“ Bucle infinito detectado.",
    510: "510 Not Extended â€“ Requiere extensiones adicionales.",
    511: "511 Network Authentication Required â€“ AutenticaciÃ³n de red requerida."
    }
    try:
        
        if http.status_code in activos:
            print(Fore.GREEN+activos[http.status_code])

        elif http.status_code in error:
            print(Fore.RED+error[http.status_code])
        else:
            print("codigo desconocido.")
            pass     
    except:
        print("Error en el request.")
        pass

    continuar = input("Y/N? ").strip().lower()
    if continuar not in ["y", "yes", "si", "s", "ok"]:
        break
